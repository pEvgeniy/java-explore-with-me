DROP TABLE IF EXISTS users, categories, events, compilations, compilation_events,locations CASCADE;

CREATE TABLE IF NOT EXISTS users(
    id    INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    email varchar(255) NOT NULL UNIQUE,
    name  varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS categories(
    id   INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name varchar(128) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS locations(
    id  INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY UNIQUE,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS events(
    id                 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    annotation         varchar(255) NOT NULL,
    category_id        INT REFERENCES categories (id) ON DELETE NO ACTION NOT NULL,
    confirmed_requests INT,
    created_at         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    description        varchar(255) NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id       INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    location_id        BIGINT NOT NULL REFERENCES locations (id),
    paid               boolean NOT NULL DEFAULT false,
    participant_limit  INT NOT NULL DEFAULT 0,
    published_at       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation boolean NOT NULL DEFAULT true,
    state              varchar(128) NOT NULL DEFAULT 'PENDING',
    title              varchar(128) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations(
    id     INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    pinned boolean NOT NULL DEFAULT false,
    title  varchar(128) NOT NULL
);

CREATE TABLE IF NOT EXISTS requests(
    id           INT GENERATED BY DEFAULT AS IDENTITY UNIQUE NOT NULL,
    event_id     INT NOT NULL REFERENCES events (id) ON DELETE CASCADE,
    requester_id INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    status       varchar(255) NOT NULL DEFAULT 'PENDING',
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT requests_pk PRIMARY KEY (requester_id, event_id)
);

CREATE TABLE IF NOT EXISTS compilation_events(
    compilation_id INT REFERENCES compilations (id) ON DELETE CASCADE NOT NULL,
    event_id       INT REFERENCES events (id) ON DELETE CASCADE NOT NULL,
    PRIMARY KEY (compilation_id, event_id)
);